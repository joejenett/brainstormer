{"version":3,"sources":["../../src/trees/avl.ts"],"sourcesContent":["import { Nullable } from '../types.js'\nimport { safeArrayPush } from '../utils.js'\n\nexport interface Node<K, V> {\n  // Node key\n  k: K\n  // Node value\n  v: V\n  // Left child node\n  l: Nullable<Node<K, V>>\n  // Right child node\n  r: Nullable<Node<K, V>>\n  // Tree height from this node\n  h: number\n}\n\nexport interface RootNode<K, V> {\n  root: Node<K, V>\n}\n\nfunction rotateLeft<K, V>(node: Node<K, V>): Node<K, V> {\n  const right = node.r as Node<K, V>\n  node.r = right.l\n  right.l = node\n  node.h = Math.max(getHeight(node.l), getHeight(node.r)) + 1\n  right.h = Math.max(getHeight(right.l), getHeight(right.r)) + 1\n  return right\n}\n\nfunction rotateRight<K, V>(node: Node<K, V>): Node<K, V> {\n  const left = node.l as Node<K, V>\n  node.l = left.r\n  left.r = node\n  node.h = Math.max(getHeight(node.l), getHeight(node.r)) + 1\n  left.h = Math.max(getHeight(left.l), getHeight(left.r)) + 1\n  return left\n}\n\nexport function contains<K, V>(node: RootNode<K, V>, key: K): boolean {\n  return !!find(node, key)\n}\n\nexport function getSize<K, V>(root: Nullable<RootNode<K, V>>): number {\n  let size = 0\n  const queue: Array<Node<K, V>> = []\n\n  if (root !== null) {\n    queue.push(root.root)\n  }\n\n  while (queue.length > 0) {\n    const node = queue.shift() as Node<K, V>\n    size++\n\n    if (node.l !== null) {\n      queue.push(node.l)\n    }\n\n    if (node.r !== null) {\n      queue.push(node.r)\n    }\n  }\n\n  return size\n}\n\nexport function isBalanced<K, V>(root: Nullable<RootNode<K, V>>): boolean {\n  if (root === null) return true\n\n  const stack: Array<Node<K, V>> = [root.root]\n\n  while (stack.length > 0) {\n    const node = stack.pop()\n\n    if (node != null) {\n      const leftHeight = getHeight(node.l)\n      const rightHeight = getHeight(node.r)\n      const heightDiff = leftHeight - rightHeight\n\n      if (Math.abs(heightDiff) > 1) {\n        return false\n      }\n\n      if (node.l !== null) {\n        stack.push(node.l)\n      }\n      if (node.r !== null) {\n        stack.push(node.r)\n      }\n    }\n  }\n\n  return true\n}\n\nexport function rangeSearch<K, V>(node: RootNode<K, V>, min: K, max: K): V {\n  const result: V[] = []\n\n  function traverse(node: Node<K, V>) {\n    if (node === null) {\n      return\n    }\n\n    if (min < node.k) {\n      traverse(node.l as Node<K, V>)\n    }\n\n    if (node.k >= min && node.k <= max) {\n      safeArrayPush(result, node.v as V[])\n    }\n\n    if (max > node.k) {\n      traverse(node.r as Node<K, V>)\n    }\n  }\n\n  traverse(node.root)\n\n  return result as V\n}\n\nexport function greaterThan<K, V>(node: RootNode<K, V>, key: K, inclusive = false): V {\n  const result: V[] = []\n\n  function traverse(node: Node<K, V>) {\n    if (node === null) {\n      return\n    }\n\n    if (inclusive && node.k >= key) {\n      safeArrayPush(result, node.v as V[])\n    }\n\n    if (!inclusive && node.k > key) {\n      safeArrayPush(result, node.v as V[])\n    }\n\n    traverse(node.l as Node<K, V>)\n    traverse(node.r as Node<K, V>)\n  }\n\n  traverse(node.root)\n\n  return result as V\n}\n\nexport function lessThan<K, V>(node: RootNode<K, V>, key: K, inclusive = false): V {\n  const result: V[] = []\n\n  function traverse(node: Node<K, V>) {\n    if (node === null) {\n      return\n    }\n\n    if (inclusive && node.k <= key) {\n      safeArrayPush(result, node.v as V[])\n    }\n\n    if (!inclusive && node.k < key) {\n      safeArrayPush(result, node.v as V[])\n    }\n\n    traverse(node.l as Node<K, V>)\n    traverse(node.r as Node<K, V>)\n  }\n\n  traverse(node.root)\n\n  return result as V\n}\n\nfunction getNodeByKey<K, V>(node: Nullable<Node<K, V>>, key: K): Nullable<Node<K, V>> {\n  while (node !== null) {\n    if (key < node.k) {\n      node = node.l\n    } else if (key > node.k) {\n      node = node.r\n    } else {\n      return node\n    }\n  }\n  return null\n}\n\nexport function create<K, V>(key: K, value: V): RootNode<K, V> {\n  return {\n    root: {\n      k: key,\n      v: value,\n      l: null,\n      r: null,\n      h: 0\n    }\n  }\n}\n\nexport function insert<K, V>(rootNode: RootNode<K, V[]>, key: K, newValue: V[]): void {\n  function insertNode(node: Nullable<Node<K, V[]>>, key: K, newValue: V[]): Node<K, V[]> {\n    if (node === null) {\n      return {\n        k: key,\n        v: newValue,\n        l: null,\n        r: null,\n        h: 0\n      }\n    }\n\n    if (key < node.k) {\n      node.l = insertNode(node.l, key, newValue)\n    } else if (key > node.k) {\n      node.r = insertNode(node.r, key, newValue)\n    } else {\n      for (const value of newValue) {\n        node.v.push(value)\n      }\n      return node\n    }\n\n    node.h = 1 + Math.max(getHeight(node.l), getHeight(node.r))\n\n    const balanceFactor = getHeight(node.l) - getHeight(node.r)\n\n    if (balanceFactor > 1 && key < node.l!.k) {\n      return rotateRight(node)\n    }\n\n    if (balanceFactor < -1 && key > node.r!.k) {\n      return rotateLeft(node)\n    }\n\n    if (balanceFactor > 1 && key > node.l!.k) {\n      node.l = rotateLeft(node.l!)\n      return rotateRight(node)\n    }\n\n    if (balanceFactor < -1 && key < node.r!.k) {\n      node.r = rotateRight(node.r!)\n      return rotateLeft(node)\n    }\n\n    return node\n  }\n\n  rootNode.root = insertNode(rootNode.root, key, newValue)\n}\n\nfunction getHeight<K, V>(node: Nullable<Node<K, V>>): number {\n  return node !== null ? node.h : -1\n}\n\nexport function find<K, V>(root: RootNode<K, V>, key: K): Nullable<V> {\n  const node = getNodeByKey(root.root, key)\n  if (node === null) {\n    return null\n  }\n  return node.v\n}\n\nexport function remove<K, V>(rootNode: Nullable<RootNode<K, V>>, key: K): void {\n  if (rootNode === null || rootNode.root === null) {\n    return\n  }\n\n  let node = rootNode.root\n  let parentNode: Nullable<Node<K, V>> = null\n\n  while (node != null && node.k !== key) {\n    parentNode = node\n    if (key < node.k) {\n      node = node.l!\n    } else {\n      node = node.r!\n    }\n  }\n\n  if (node === null) {\n    return\n  }\n\n  const deleteNode = () => {\n    if (node.l === null && node.r === null) {\n      if (parentNode === null) {\n        rootNode.root = null!\n      } else {\n        if (parentNode.l === node) {\n          parentNode.l = null\n        } else {\n          parentNode.r = null\n        }\n      }\n    } else if (node.l != null && node.r != null) {\n      let minValueNode = node.r\n      let minValueParent = node\n\n      while (minValueNode.l != null) {\n        minValueParent = minValueNode\n        minValueNode = minValueNode.l\n      }\n\n      node.k = minValueNode.k\n\n      if (minValueParent === node) {\n        minValueParent.r = minValueNode.r\n      } else {\n        minValueParent.l = minValueNode.r\n      }\n    } else {\n      const childNode = node.l != null ? node.l : node.r\n\n      if (parentNode === null) {\n        rootNode.root = childNode!\n      } else {\n        if (parentNode.l === node) {\n          parentNode.l = childNode\n        } else {\n          parentNode.r = childNode\n        }\n      }\n    }\n  }\n\n  deleteNode()\n}\n\nexport function removeDocument<K, V>(root: RootNode<K, V[]>, id: V, key: K): void {\n  const node = getNodeByKey(root.root, key)!\n\n  if (!node) {\n    return\n  }\n\n  if (node.v.length === 1) {\n    remove(root, key)\n    return\n  }\n\n  node.v.splice(node.v.indexOf(id), 1)\n}\n"],"names":["safeArrayPush","rotateLeft","node","right","r","l","h","Math","max","getHeight","rotateRight","left","contains","key","find","getSize","root","size","queue","push","length","shift","isBalanced","stack","pop","leftHeight","rightHeight","heightDiff","abs","rangeSearch","min","result","traverse","k","v","greaterThan","inclusive","lessThan","getNodeByKey","create","value","insert","rootNode","newValue","insertNode","balanceFactor","remove","parentNode","deleteNode","minValueNode","minValueParent","childNode","removeDocument","id","splice","indexOf"],"mappings":"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"}