{"version":3,"sources":["../../src/components/plugins.ts"],"sourcesContent":["import type { AnyOrama, OramaPlugin } from '../types.js'\n\nexport type AvailablePluginHooks = (typeof AVAILABLE_PLUGIN_HOOKS)[number]\n\nexport const AVAILABLE_PLUGIN_HOOKS = [\n  'beforeInsert',\n  'afterInsert',\n  'beforeRemove',\n  'afterRemove',\n  'beforeUpdate',\n  'afterUpdate',\n  'beforeSearch',\n  'afterSearch',\n  'beforeInsertMultiple',\n  'afterInsertMultiple',\n  'beforeRemoveMultiple',\n  'afterRemoveMultiple',\n  'beforeUpdateMultiple',\n  'afterUpdateMultiple',\n  'beforeLoad',\n  'afterLoad'\n] as const\n\nexport function getAllPluginsByHook<T extends AnyOrama>(orama: T, hook: AvailablePluginHooks): OramaPlugin[] {\n  const pluginsToRun: OramaPlugin[] = []\n\n  const pluginsLength = orama.plugins?.length\n\n  if (!pluginsLength) {\n    return pluginsToRun\n  }\n\n  for (let i = 0; i < pluginsLength; i++) {\n    const plugin = orama.plugins[i]\n\n    if (typeof plugin[hook] === 'function') {\n      pluginsToRun.push(plugin[hook] as OramaPlugin)\n    }\n  }\n\n  return pluginsToRun\n}\n"],"names":["AVAILABLE_PLUGIN_HOOKS","getAllPluginsByHook","orama","hook","pluginsToRun","pluginsLength","plugins","length","i","plugin","push"],"mappings":"AAIA,OAAO,MAAMA,yBAAyB;IACpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD,CAAS;AAEV,OAAO,SAASC,oBAAwCC,KAAQ,EAAEC,IAA0B,EAAiB;QAGrFD;IAFtB,MAAME,eAA8B,EAAE;IAEtC,MAAMC,gBAAgBH,CAAAA,iBAAAA,MAAMI,OAAO,cAAbJ,4BAAAA,KAAAA,IAAAA,eAAeK,MAAM;IAE3C,IAAI,CAACF,eAAe;QAClB,OAAOD;IACT,CAAC;IAED,IAAK,IAAII,IAAI,GAAGA,IAAIH,eAAeG,IAAK;QACtC,MAAMC,SAASP,MAAMI,OAAO,CAACE,EAAE;QAE/B,IAAI,OAAOC,MAAM,CAACN,KAAK,KAAK,YAAY;YACtCC,aAAaM,IAAI,CAACD,MAAM,CAACN,KAAK;QAChC,CAAC;IACH;IAEA,OAAOC;AACT,CAAC"}